//------------------------------------------------------------------------------
// JenkinsFile
//------------------------------------------------------------------------------

pipeline {

    agent {
        label 'java8 && build'
    }

    options {
        ansiColor colorMapName: 'XTerm'
        buildDiscarder(logRotator(numToKeepStr: '10'))
    }

    tools { 
        jdk 'openjdk-1.8.0'
        maven 'maven3.5.2'
    }

    stages {

        stage("Source build and Test") {
            steps {
                script {
                    sh "mvn -B clean deploy"
                    // Commands to Push the artifact from Jenkins to remote repository (nexus or jfrog)
                }
            }
        }

        stage('Build Docker') {
            steps {
                script {

                    try {
                       // Get the artifact version from POM file
                    def pom = readMavenPom file: "pom.xml"
                    artifactId = pom.artifactId
                    def pom_version = pom.version

                    buildTag = "${env.BUILD_TAG}-${artifactId}".toLowerCase()

                    // Docker build
                    sh "docker build -t ${buildTag} -f Dockerfile --build-arg APP_VERSION=${pom_version} ."
                   
                    // Docker repo can be private or cloud based one like ECR
                    sh "docker push ${docker_repo}:${tag}" 

                    } catch(Exception e) {
                        echo "Exception occured while Docker build stage" . $e
                    } finally {
                        // Remove the image from jenkins server
                        sh "docker rmi ${buildTag}"
                    }
                }
            }
        }

        stage("Deploy") {
            steps {
                script {
                    // Get the image from image repository
                    // Execute commands to do the deployment in the appropriate Kubernetes environment
                }
            }
        }
    }
}